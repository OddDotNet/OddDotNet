syntax = "proto3";

option csharp_namespace = "OddDotNet";

message Span {
  InstrumentationScope instrumentationScope = 1;
  string name = 2;
  map<string, AnyValue> attributes = 3;
  repeated SpanEvent events = 4;
  uint32 flags = 5;
  SpanKind Kind = 6;
  repeated SpanLink links = 7;
  SpanStatus status = 8;
  bytes spanId = 9;
  bytes traceId = 10;
  string traceState = 11;
  bytes parentSpanId = 12;
  uint64 startTimeUnixNano = 13;
  uint64 endTimeUnixNano = 14;
}

message InstrumentationScope {
  string name = 1;
  map<string, AnyValue> attributes = 2;
  string version = 3;
  string schemaUrl = 4;
  Resource resource = 5;
}

message Resource {
  map<string, AnyValue> attributes = 1;
  string schemaUrl = 2;
}

message SpanEvent {
  string name = 1;
  map<string, AnyValue> attributes = 2;
  uint64 timeUnixNano = 3;
}

enum SpanKind {
  UNSPECIFIED = 0;
  INTERNAL = 1;
  SERVER = 2;
  CLIENT = 3;
  PRODUCER = 4;
  CONSUMER = 5;
}

message SpanLink {
  bytes spanId = 1;
  map<string, AnyValue> attributes = 2;
  uint32 flags = 3;
  bytes traceId = 4;
  string traceState = 5;
}

message SpanStatus {
  SpanStatusCode code = 1;
  optional string message = 2;
}

enum SpanStatusCode {
  UNSET = 0;
  OK = 1;
  ERROR = 2;
}

// AnyValue is used to represent any type of attribute value. AnyValue may contain a
// primitive value such as a string or integer or it may contain an arbitrary nested
// object containing arrays, key-value lists and primitives.
message AnyValue {
  // The value is one of the listed fields. It is valid for all values to be unspecified
  // in which case this AnyValue is considered to be "empty".
  oneof value {
    string string_value = 1;
    bool bool_value = 2;
    int64 int_value = 3;
    double double_value = 5;
    ArrayValue array_value = 6;
    bytes bytes_value = 7;
  }
}

// ArrayValue is a list of AnyValue messages. We need ArrayValue as a message
// since oneof in AnyValue does not allow repeated fields.
message ArrayValue {
  // Array of values. The array may be empty (contain 0 elements).
  repeated AnyValue values = 1;
}